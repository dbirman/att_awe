pdata = pdata %>%
mutate(respond=factor(respond,levels=c(0,1),labels=c('no','yes'))) %>%
mutate(tGen=factor(tGen,levels=c(1,2),labels=c('f','m')))
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
str(pdata)
semi_join(mdata,pdata,by='runNum')
mpdata = semi_join(mdata,pdata,by='runNum')
str(mpdata)
str(mdata)
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual,task=run$blockType,runNum=fi)
per = per %>%
mutate(dual=run$dual,task=run$blockType,runNum=fi) %>%
rename(trial=mainTrial)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
pdata = pdata %>%
mutate(respond=factor(respond,levels=c(0,1),labels=c('no','yes'))) %>%
mutate(tGen=factor(tGen,levels=c(1,2),labels=c('f','m')))
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
mpdata = semi_join(mdata,pdata,by='runNum')
str(mpdata)
str(pdata)
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual'))) %>%
mutate(index = 1:nrow(.)) %>%
select(-task,-dual)
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual,task=run$blockType,runNum=fi)
per = per %>%
mutate(dual=run$dual,task=run$blockType,runNum=fi) %>%
rename(trial=mainTrial)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
pdata = pdata %>%
mutate(respond=factor(respond,levels=c(0,1),labels=c('no','yes'))) %>%
mutate(tGen=factor(tGen,levels=c(1,2),labels=c('f','m')))
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
str(pdata)
out4 = pdata %>%
glm(data=.,correct ~ position + respond + tGen + SOA + taskf + dualf + index,family='binomial')
out4 %>%
summary
plot(allEffects(out4))
str(pdata)
library(ggplot2)
library(dplyr)
library(tidyr)
library(lme4)
main = read.csv('../analysis/s300/csv/mainThresholds.csv')
per = read.csv('../analysis/s300/csv/perThresholds.csv')
noise = c(0.0758581800212435,         0.148047198031689,         0.268941421369995,         0.437823499114202,         0.622459331201855)
noisePed = noise[2:4]
contrast = c(.1, .15, .25, .4, .6)
contrastPed = contrast[2:4]
main = main %>% mutate(taskf = factor(task,levels=c(1,2),labels=c('Noise','Contrast')))
main = main %>% mutate(cuesf = factor(cues,levels=c(1,2),labels=c('One','Four')))
main = main %>% mutate(pedf = factor(pedestal,levels=c(1,2,3),labels=c('1','2','3')))
main = main %>% filter(threshold>0,threshold<.55)
main = main %>% mutate(dualf = factor(dual,levels=c(1,2),labels=c('Single','Dual')))
per = per %>% mutate(taskf = factor(task,levels=c(1,2,3),labels=c('Single','Dual:Noise','Dual:Contrast')))
per = per %>% filter(threshold>0,threshold<.25)
permean = per %>% group_by(taskf) %>% summarise(mu=mean(threshold),sd=sd(threshold))
pedFrame = data.frame(taskf=c('Noise','Noise','Noise',
'Contrast','Contrast','Contrast'),
pedestal=c(1,2,3,
1,2,3),
pedValue=c(noisePed,
contrastPed))
main = main %>% merge(pedFrame)
mainmean = main %>%
group_by(taskf,pedestal,cuesf,dualf) %>%
summarise(mu=mean(threshold),sd=sd(threshold))
mainmean = mainmean %>% mutate(muround=round(mu,2))
# pdf('../analysis/s300/figures/discFuncs.pdf')
ggplot() +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
# pdf('../analysis/s300/figures/discFuncsGender.pdf')
ggplot() +
geom_point(data=per,aes(taskf,y=threshold,color=taskf),size=5) +
geom_errorbar(data=permean,aes(taskf,mu,ymin=mu-sd,ymax=mu+sd),size=.5,width=.3) +
geom_point(data=permean,aes(taskf,mu),size=6) +
theme_bw()
contrasts(per$taskf) = cbind(c(2,-1,-1),c(0,1,-1))
per %>% lm(data=.,threshold ~ taskf) %>% summary()
# dev.off()
perNorm = per %>%
mutate(single = permean[1,2]$mu) %>%
mutate(nThresh = threshold / single)
mainNorm = main %>%
mutate(nThresh = threshold / pedValue)
pedFrame = pedFrame %>%
mutate(rpedValue = round(pedValue,2))
mainNormMean = mainNorm %>%
group_by(taskf,pedValue,cuesf,dualf) %>%
summarise(mu=mean(nThresh),sd=sd(nThresh))
ggplot() +
geom_line(data=mainNormMean,aes(pedValue,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainNormMean,aes(pedValue,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.03) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
perNormMean = perNorm %>%
group_by(taskf) %>%
summarise(mu=mean(nThresh),sd=sd(nThresh))
ggplot() +
geom_point(data=perNorm,aes(taskf,y=nThresh,color=taskf),size=5) +
geom_errorbar(data=perNormMean,aes(taskf,mu,ymin=mu-sd,ymax=mu+sd),size=.5,width=.3) +
geom_point(data=perNormMean,aes(taskf,mu),size=6) +
theme_bw()
library(ggplot2)
library(dplyr)
library(tidyr)
library(lme4)
library(effects)
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual'))) %>%
mutate(index = 1:nrow(.)) %>%
select(-task,-dual)
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual,task=run$blockType,runNum=fi)
per = per %>%
mutate(dual=run$dual,task=run$blockType,runNum=fi) %>%
rename(trial=mainTrial)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
pdata = pdata %>%
mutate(respond=factor(respond,levels=c(0,1),labels=c('no','yes'))) %>%
mutate(tGen=factor(tGen,levels=c(1,2),labels=c('f','m')))
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
mdata = mdata %>%
mutate(cues = factor(cues,levels=c(1,4),labels=c('1','4')))
mdata %>%
ggplot(aes(ped,RT,color=correct)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
out1 = lmer(data=mdata,RT ~ taskf + dualf + ped + correct + index + (1|img))
out1 %>%
summary ->
rs
rs
plot(allEffects(out1))
# peripheral task
pdata %>%
ggplot(aes(tImg,RT,color=dualf)) +
geom_point() +
facet_grid(.~dualf) +
ggtitle('Peripheral')
out2 = lmer(data=pdata,RT ~ dualf + correct + respond + SOA + tGen + index + (1|tImg),na.action=na.omit)
out2 %>%
summary
plot(allEffects(out2))
# Not in a subset of trials "mainTrial" shows no effect
out3 = mdata %>%
glm(data=.,correct ~ interval + index + taskf + dualf + cues,family='binomial')
out3 %>%
summary
plot(allEffects(out3))
out4 = pdata %>%
glm(data=.,correct ~ position + respond + tGen + SOA + taskf + dualf + index,family='binomial')
out4 %>%
summary
plot(allEffects(out4))
out3 = mdata %>%
glm(data=.,correct ~ interval + index + taskf + dualf + cues,family='binomial')
out3 %>%
summary
plot(allEffects(out3))
plot(allEffects(glm(mdata,correct~interval,family='binomial')))
plot(allEffects(glm(data=mdata,correct~interval,family='binomial')))
plot(allEffects(out3))
perNormMean = perNorm %>%
group_by(taskf) %>%
summarise(mu=mean(nThresh),sd=sd(nThresh))
ggplot() +
geom_point(data=perNorm,aes(taskf,y=nThresh,color=taskf),size=5) +
geom_errorbar(data=perNormMean,aes(taskf,mu,ymin=mu-sd,ymax=mu+sd),size=.5,width=.3) +
geom_point(data=perNormMean,aes(taskf,mu),size=6) +
theme_bw()
ggplot() +
geom_line(data=mainNormMean,aes(pedValue,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainNormMean,aes(pedValue,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.03) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# pdf('../analysis/s300/figures/discFuncs.pdf')
ggplot() +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
mainmean
mainNormMean
main
str(main)
main = main %>%
mutate(imgFile = ifelse(interval==1,
sprintf('../images/built/con%03.fnoi%03.f_img.png',tCon1,tNoi1),
sprintf('../images/built/con%03.fnoi%03.f_img.png',tCon2,tNoi2)))
str(main)
mainmean = main %>%
group_by(taskf,pedestal,cuesf,dualf) %>%
summarise(mu=mean(threshold),sd=sd(threshold))
mainmean = mainmean %>% mutate(muround=round(mu,2))
main = read.csv('../analysis/s300/csv/mainThresholds.csv')
per = read.csv('../analysis/s300/csv/perThresholds.csv')
noise = c(0.0758581800212435,         0.148047198031689,         0.268941421369995,         0.437823499114202,         0.622459331201855)
noisePed = noise[2:4]
contrast = c(.1, .15, .25, .4, .6)
contrastPed = contrast[2:4]
main = main %>% mutate(taskf = factor(task,levels=c(1,2),labels=c('Noise','Contrast')))
main = main %>% mutate(cuesf = factor(cues,levels=c(1,2),labels=c('One','Four')))
main = main %>% mutate(pedf = factor(pedestal,levels=c(1,2,3),labels=c('1','2','3')))
main = main %>% filter(threshold>0,threshold<.55)
main = main %>% mutate(dualf = factor(dual,levels=c(1,2),labels=c('Single','Dual')))
per = per %>% mutate(taskf = factor(task,levels=c(1,2,3),labels=c('Single','Dual:Noise','Dual:Contrast')))
per = per %>% filter(threshold>0,threshold<.25)
permean = per %>% group_by(taskf) %>% summarise(mu=mean(threshold),sd=sd(threshold))
pedFrame = data.frame(taskf=c('Noise','Noise','Noise',
'Contrast','Contrast','Contrast'),
pedestal=c(1,2,3,
1,2,3),
pedValue=c(noisePed,
contrastPed))
main = main %>% merge(pedFrame)
main = main %>%
mutate(imgFile = ifelse(interval==1,
sprintf('../images/built/con%03.fnoi%03.f_img.png',tCon1,tNoi1),
sprintf('../images/built/con%03.fnoi%03.f_img.png',tCon2,tNoi2)))
str(main)
main = read.csv('../analysis/s300/csv/mainThresholds.csv')
per = read.csv('../analysis/s300/csv/perThresholds.csv')
main = main %>% mutate(taskf = factor(task,levels=c(1,2),labels=c('Noise','Contrast')))
main = main %>% mutate(cuesf = factor(cues,levels=c(1,2),labels=c('One','Four')))
main = main %>% mutate(pedf = factor(pedestal,levels=c(1,2,3),labels=c('1','2','3')))
main = main %>% filter(threshold>0,threshold<.55)
main = main %>% mutate(dualf = factor(dual,levels=c(1,2),labels=c('Single','Dual')))
per = per %>% mutate(taskf = factor(task,levels=c(1,2,3),labels=c('Single','Dual:Noise','Dual:Contrast')))
per = per %>% filter(threshold>0,threshold<.25)
permean = per %>% group_by(taskf) %>% summarise(mu=mean(threshold),sd=sd(threshold))
str(main)
str(per)
str(main)
pedFrame = data.frame(taskf=c('Noise','Noise','Noise',
'Contrast','Contrast','Contrast'),
pedestal=c(1,2,3,
1,2,3),
pedValue=c(noisePed,
contrastPed))
main = main %>% merge(pedFrame)
str(main)
pedFrame = data.frame(taskf=c('Noise','Noise','Noise',
'Contrast','Contrast','Contrast'),
pedestal=c(1,2,3,
1,2,3),
pedValue=c(noisePed,
contrastPed))
main = main %>% merge(pedFrame)
main = main %>%
mutate(imgFile = ifelse(taskf=='Noise',
sprintf('../images/built/con%03.fnoi%03.f_img.png',50,(threshold+pedValue)*100),
sprintf('../images/built/con%03.fnoi%03.f_img.png',(threshold+pedValue)*100,50)))
str(main)
# pdf('../analysis/s300/figures/discFuncs.pdf')
g = ggplot() +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
library(png)
library(grid)
img = readPNG('../images/built/con100noi050_img.png')
img = rasterGrob(img,interpolate=TRUE)
g + img
g
g + annotation_custom(img,xmin=2,xmax=2.5,ymin=.2,ymax=.3)
img
g
g + geom_text('text')
g + geom_text(label='text')
g + geom_text(label='text',x=1,y=1)
g + annotation_custom(img,xmin=2,xmax=2.5,ymin=.2,ymax=.3)
str(main)
main %>% mutate(grob = rasterGrob(imgFile,interpolate=TRUE))
# pdf('../analysis/s300/figures/discFuncs.pdf')
g = ggplot(data=main) +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
g + annotation_custom(rasterGrob(imgFile,interpolate=TRUE),xmin=2,xmax=2.5,ymin=.2,ymax=.3)
g + annotation_custom(rasterGrob(main$imgFile,interpolate=TRUE),xmin=2,xmax=2.5,ymin=.2,ymax=.3)
?rasterGrob
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=2,xmax=2.5,ymin=.2,ymax=.3)
str(main)
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=pedestal+.1,xmax=pedestal+.3,ymin=mu,ymax=mu+.05)
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=main$pedestal+.1,xmax=main$pedestal+.3,ymin=main$mu,ymax=main$mu+.05)
# pdf('../analysis/s300/figures/discFuncs.pdf')
g = ggplot(data=main,aes(pedestal,mu)) +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
g
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=main$pedestal+.1,xmax=main$pedestal+.3,ymin=main$mu,ymax=main$mu+.05)
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=pedestal+.1,xmax=pedestal+.3,ymin=mu,ymax=mu+.05)
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=main$pedestal+.1,xmax=pedestal+.3,ymin=mu,ymax=mu+.05)
main
str(main)
# pdf('../analysis/s300/figures/discFuncs.pdf')
g = ggplot(data=mainmean,aes(pedestal,mu)) +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=main$pedestal+.1,xmax=pedestal+.3,ymin=mu,ymax=mu+.05)
g + annotation_custom(rasterGrob(readPNG(main$imgFile),interpolate=TRUE),xmin=main$pedestal+.1,xmax=main$pedestal+.3,ymin=mainmean$mu,ymax=mainmean$mu+.05)
main$imgFile
str(mainmean)
str(mainmean)
mainmean = main %>%
group_by(taskf,pedestal,cuesf,dualf,imgFile) %>%
summarise(mu=mean(threshold),sd=sd(threshold))
mainmean = mainmean %>% mutate(muround=round(mu,2))
str(mainmean)
mainmean = main %>%
group_by(taskf,pedestal,cuesf,dualf) %>%
summarise(mu=mean(threshold),sd=sd(threshold))
mainmean = mainmean %>% mutate(muround=round(mu,2))
str(mainmean)
# pdf('../analysis/s300/figures/discFuncsGender.pdf')
ggplot() +
geom_point(data=per,aes(taskf,y=threshold,color=taskf),size=5) +
geom_errorbar(data=permean,aes(taskf,mu,ymin=mu-sd,ymax=mu+sd),size=.5,width=.3) +
geom_point(data=permean,aes(taskf,mu),size=6) +
theme_bw()
contrasts(per$taskf) = cbind(c(2,-1,-1),c(0,1,-1))
per %>% lm(data=.,threshold ~ taskf) %>% summary()
# dev.off()
ggplot() +
geom_line(data=mainNormMean,aes(pedValue,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainNormMean,aes(pedValue,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.03) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# pdf('../analysis/s300/figures/discFuncs.pdf')
g = ggplot(data=mainmean,aes(pedestal,mu)) +
geom_line(data=mainmean,aes(pedestal,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainmean,aes(pedestal,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.1) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
# dev.off()
g
ggplot() +
geom_line(data=mainNormMean,aes(pedValue,mu,color=dualf,linetype=cuesf)) +
geom_errorbar(data=mainNormMean,aes(pedValue,mu,ymin=mu-sd,ymax=mu+sd,color=dualf,linetype=cuesf),width=.03) +
#   geom_text(data=mainmean,aes(label=mainmean$muround,x=mainmean$pedestal+.2,y=mainmean$mu)) +
facet_grid(.~taskf) +
theme_bw()
perNormMean = perNorm %>%
group_by(taskf) %>%
summarise(mu=mean(nThresh),sd=sd(nThresh))
ggplot() +
geom_point(data=perNorm,aes(taskf,y=nThresh,color=taskf),size=5) +
geom_errorbar(data=perNormMean,aes(taskf,mu,ymin=mu-sd,ymax=mu+sd),size=.5,width=.3) +
geom_point(data=perNormMean,aes(taskf,mu),size=6) +
theme_bw()
out4 = pdata %>%
glm(data=.,correct ~ position + respond + tGen + SOA + taskf + dualf + index,family='binomial')
out4 %>%
summary
plot(allEffects(out4))
str(main)
?power
??power
t.test(c(0,0,0,1,1,1))
t.test(c(0,0,0,0,0,0,0,1,1,1,1,1,1,1))
power.t.test
?power.t.test
power.t.test(n=30,delta=.93-.5)
power.t.test(delta=.93-.5,power=.8)
power.t.test(delta=.93-.5,power=.8,type="one.sample")
plot(23z/100)
z = 1:50
plot(23z/100)
plot(23*z/100)
23*z/100
?t.test
zeros(30)
?zero
?ones
t.test(c(0,0,0,0,0,0),c(0,0,0,1,1,1))
t.test(c(0,0,0,1,1,1))
t.test(c(0,0,0,2,2,2))
t.test(c(0,0,0,1,1,1))
t.test(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))
?power.t.test
sd(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))
mean(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1))
power.t.test(n=30,delta=.5,sd=.5)
power.t.test(delta=.5,sd=.5,power=.99)
t.test(c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),c(1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),type='paired')
data = data.frame(dual=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),single=c(.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93)
)
data
data = data.frame(dual=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),single=c(.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,id=1:30)
)
data
data = data.frame(dual=c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1),single=c(.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93,.93)
)
data$id = 1:#0
data$id = 1:30
data
power.t.test(n=30,delta=.43,sd=.5,type='paired')
1-0
??power
?power.prop.test
power.prop.test(n=30,p1=.5,p2=.93)
.93*30
.5*30
prop.test(c(15,28),c(30,30))
prop.test(c(15,28),c(30,30),alternative='greater')
prop.test(c(15,28),c(30,30),alternative='less')
prop.test(c(15,28),c(30,30),p=c(0,1)alternative='less')
prop.test(c(15,28),c(30,30),p=c(0,1),alternative='less')
prop.test(c(15,28),c(30,30),alternative='less')
binom.test(15,30,p=.93,alternatives='less')
binom.test(15,30,p=.93,alternative='less')
prop.test(c(15,28),c(30,30),alternative='less')
prop.test(c(15,2),c(30,30),alternative='greater')
power.prop.test
?power.prop.test
power.prop.test(n=30,p1=.5,p2=.93,alternative="one.sided")
power.prop.test(power=.8,p1=.5,p2=.93,alternative="one.sided")
power.prop.test(power=.9,p1=.5,p2=.93,alternative="one.sided")
power.prop.test(power=.95,p1=.5,p2=.93,alternative="one.sided")
power.prop.test(power=.99,p1=.5,p2=.93,alternative="one.sided")
