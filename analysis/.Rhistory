summary(rs)
edata[1:10,]
edata[100:150,]
edata[250:260,]
eye = eye %>%
filter(xPos ~= 0, yPos ~= 0, time ~=0)
eye = eye %>%
filter(xPos != 0, yPos != 0, time !=0)
head(eye)
# Reaction time analysis
filesToLoad = seq(1)
subj = 's021'
type = 'behav'
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('%s/main%02.f.csv',csvFolder,fi))
eye = read.csv(sprintf('%s/eye%02.f.csv',csvFolder,fi))
# Switch to determine what kind of analysis we do
main = main %>%
select(-conDelta,-cohDelta,-coherence,-contrast,-lAvgCon,-rAvgCon,-lAvgCoh,-rAvgCoh,-conPedestal,-cohPedestal)
eye = left_join(eye,main,by='trial')
eye = eye %>%
filter(xPos != 0, yPos != 0, time !=0)
if (fi==1) {
edata = eye
} else {
edata = rbind(edata,eye)
}
}
edata = edata %>%
select(-trial)
main
head(main)
# Reaction time analysis
filesToLoad = seq(1)
subj = 's021'
type = 'behav'
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('%s/main%02.f.csv',csvFolder,fi))
eye = read.csv(sprintf('%s/eye%02.f.csv',csvFolder,fi))
# Switch to determine what kind of analysis we do
main = main %>%
select(-conDelta,-cohDelta,-coherence,-contrast,-conPedestal,-cohPedestal)
eye = left_join(eye,main,by='trial')
eye = eye %>%
filter(xPos != 0, yPos != 0, time !=0)
if (fi==1) {
edata = eye
} else {
edata = rbind(edata,eye)
}
}
edata = edata %>%
select(-trial)
head(edata)
# Reaction time analysis
filesToLoad = seq(1)
subj = 's021'
type = 'behav'
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('%s/main%02.f.csv',csvFolder,fi))
eye = read.csv(sprintf('%s/eye%02.f.csv',csvFolder,fi))
# Switch to determine what kind of analysis we do
main = main %>%
select(-conDelta,-cohDelta,-coherence,-contrast,-conPedestal,-cohPedestal)
eye = left_join(eye,main,by='trial')
eye = eye %>%
filter(xPos != 0, yPos != 0, time !=0, xPos != NaN)
if (fi==1) {
edata = eye
} else {
edata = rbind(edata,eye)
}
}
edata = edata %>%
select(-trial)
# Reaction time analysis
filesToLoad = seq(1)
subj = 's021'
type = 'behav'
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('%s/main%02.f.csv',csvFolder,fi))
eye = read.csv(sprintf('%s/eye%02.f.csv',csvFolder,fi))
# Switch to determine what kind of analysis we do
main = main %>%
select(-conDelta,-cohDelta,-coherence,-contrast,-conPedestal,-cohPedestal)
eye = left_join(eye,main,by='trial')
eye = eye %>%
filter(xPos != 0, yPos != 0, time !=0, !is.na(xPos), !is.na(yPos))
if (fi==1) {
edata = eye
} else {
edata = rbind(edata,eye)
}
}
edata = edata %>%
select(-trial)
rs = lm(data=edata, xPos ~ time + task + conSide + cohSide + direction)
summary(rs)
plot(allEffects(rs))
rescale(edata$xPos)
?rescale
library(scales)
rescale(edata$xPos,to=c(-1,1))
mean(edata$xPos)
max(edata$xPos)
edata = edata %>%
mutate(xPos=rescale(xPos,to=c(-1,1)),yPos=rescale(yPos,to=c(-1,1)))
head(edata)
mean(edata$pupil)
max(edata$pupil)
min(edata$pupil)
# scaling
edata = edata %>%
mutate(xPos=rescale(xPos,to=c(-1,1)),yPos=rescale(yPos,to=c(-1,1)),pupil=rescale(pupil,to=c(-1,1)))
rs = lm(data=edata, xPos ~ time + task + conSide + cohSide + direction)
summary(rs)
install.packages("saccades")
library(saccades)
edata
head(edata)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum) %>%
stats = calculate.summary(edata_s)
head(edata_s)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum)
stats = calculate.summary(edata_s)
head(edata_s)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum) %>% select(-xPos,-yPos,-pupil,-RT,-run,-task-trialNum,-correct,-conSide,-cohSide,-direction,-isCatch)
head(edata_s)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum)
head(edata_s)
stats = calculate.summary(edata_s)
?calculate.summary
data(samples)
head(Samples)
head(samples)
head(edata_s)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum,time=time*1000)
head(edata_s)
stats = calculate.summary(edata_s)
edata_s[1:50,]
head(samples)
ggplot(edata) +
geom_point(aes(xPos,yPos))
# Reaction time analysis
filesToLoad = seq(1)
subj = 's021'
type = 'behav'
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('%s/main%02.f.csv',csvFolder,fi))
eye = read.csv(sprintf('%s/eye%02.f.csv',csvFolder,fi))
# Switch to determine what kind of analysis we do
main = main %>%
select(-conDelta,-cohDelta,-coherence,-contrast,-conPedestal,-cohPedestal)
eye = left_join(eye,main,by='trial')
eye = eye %>%
filter(xPos != 0, yPos != 0, time !=0, !is.na(xPos), !is.na(yPos))
if (fi==1) {
edata = eye
} else {
edata = rbind(edata,eye)
}
}
edata = edata %>%
select(-trial)
ggplot(edata) +
geom_point(aes(xPos,yPos))
ggplot(edata) +
geom_point(aes(xPos,yPos,color=time)) +
facet_grid(conSide,cohSide)
head(edata)
ggplot(edata) +
geom_point(aes(xPos,yPos,color=time)) +
facet_grid(conSide~cohSide)
ggplot(edata) +
geom_point(aes(xPos,yPos,color=time)) +
facet_grid(direction~.)
ggplot(edata) +
geom_point(aes(xPos,yPos,color=time)) +
facet_grid(direction~.) +
coord_fixed()
ggplot(edata) +
geom_point(aes(xPos,yPos,color=time)) +
facet_grid(direction~.) +
coord_equal()
edata
head(Edata)
head(edata)
edata
head(edata)
mean(edata$xPos)
edata %>% mean(xPos)
# scaling
edata = edata %>%
mutate(xPos=rescale(xPos,to=c(-1,1)),yPos=rescale(yPos,to=c(-1,1)),pupil=rescale(pupil,to=c(-1,1)))
head(edata)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum,time=time*1000)
stats = calculate.summary(edata_s)
?calculate.summary
head(edata_s)
edata_s = edata %>%
mutate(x=xPos,y=yPos,trial=trialNum,time=time*1000)
stats = calculate.summary(edata_s)
fixations
library(ggplot2)
library(MASS)
library(dplyr)
library(tidyr)
library(lme4)
library(effects)
getSubjThresholdData = function(type,snum) {
subj = sprintf('s%03.0f',snum)
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
mainTh = read.csv(sprintf('%smainThresholds.csv',csvFolder))
catTh = read.csv(sprintf('%scatThresholds.csv',csvFolder))
nocatTh = read.csv(sprintf('%snocatThresholds.csv',csvFolder))
mainTh = cbind(mainTh,catch=0)
catTh = cbind(catTh,catch=1)
nocatTh = cbind(nocatTh,catch=-1)
run = read.csv(sprintf('%srun04.csv',csvFolder))
# Setup variables
all = rbind(mainTh,catTh,nocatTh) %>%
mutate(task=factor(task,levels=c(1,2),labels=c('Coherence','Contrast')),catch=factor(catch,levels=c(-1,0,1),labels=c('Control','Task Cued','Task Miscued')),threshold=threshold*100)
all = cbind(all,subj=snum)
return(all)
}
getSubjThresholdPlot = function(all,subj,type) {
all_ = all %>%
group_by(task,catch) %>%
summarise(sd=sd(threshold),n=n(),threshold=mean(threshold)) %>%
mutate(se = sd/sqrt(n)) %>%
mutate(ci = se*1.96)
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
# Individual plot,
fname=sprintf('%s/%s_th_task_catch.pdf',figFolder,subj)
g = ggplot() +
geom_bar(data=all_,aes(task,threshold,fill=catch),position=position_dodge(width=.75),stat='identity',width=.75) +
geom_errorbar(data=all_,aes(task,threshold,fill=catch,ymin=threshold-ci,ymax=threshold+ci),position=position_dodge(width=.75),width=0,color='black') +
geom_point(data=all,aes(task,threshold,group=catch),position=position_dodge(width=.75),size=3,color='black') +
theme_bw() +
scale_fill_brewer(palette='Accent') +
scale_color_brewer(palette='Accent') +
theme(text = element_text(size=20)) +
xlab('Pedestal Value (%)') +
ylab('Discrimination Threshold (%)') +
scale_y_continuous(limits=c(0,75))
ggsave(filename=fname,plot=g)
return(g)
}
getSubjThresholdData = function(type,snum) {
subj = sprintf('s%03.0f',snum)
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
mainTh = read.csv(sprintf('%smainThresholds.csv',csvFolder))
catTh = read.csv(sprintf('%scatThresholds.csv',csvFolder))
nocatTh = read.csv(sprintf('%snocatThresholds.csv',csvFolder))
mainTh = cbind(mainTh,catch=0)
catTh = cbind(catTh,catch=1)
nocatTh = cbind(nocatTh,catch=-1)
run = read.csv(sprintf('%srun04.csv',csvFolder))
# Setup variables
all = rbind(mainTh,catTh,nocatTh) %>%
mutate(task=factor(task,levels=c(1,2),labels=c('Coherence','Contrast')),catch=factor(catch,levels=c(-1,0,1),labels=c('Control','Task Cued','Task Miscued')),threshold=threshold*100)
all = cbind(all,subj=snum)
return(all)
}
getSubjFits = function(type,snum) {
subj = sprintf('s%03.0f',snum)
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
fits = read.csv(sprintf('%smodelFits.csv',csvFolder))
fits = fits %>%
mutate(subj=snum,task=factor(task,levels=c(1,2),labels=c('Coherence','Contrast')),catch=factor(catch,levels=c(-1,0,1),labels=c('Nocatch','Cued','Miscued')))
return(fits)
}
# Multiple plot function
#
# ggplot objects can be passed in ..., or to plotlist (as a list of ggplot objects)
# - cols:   Number of columns in layout
# - layout: A matrix specifying the layout. If present, 'cols' is ignored.
#
# If the layout is something like matrix(c(1,2,3,3), nrow=2, byrow=TRUE),
# then plot 1 will go in the upper left, 2 will go in the upper right, and
# 3 will go all the way across the bottom.
#
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
library(grid)
# Make a list from the ... arguments and plotlist
plots <- c(list(...), plotlist)
numPlots = length(plots)
# If layout is NULL, then use 'cols' to determine layout
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
# Set up the page
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
# Make each plot, in the correct location
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
getFolders = function(snum) {
anFolder = sprintf('/Users/dan/data/cohcon/%s/%s/analysis/',subj,type)
csvFolder = paste(anFolder,'csv/',sep="")
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/',type,sep="")
}
subjs = c(300,25,21,302,304)
allT = data.frame()
allF = data.frame()
gs = list()
for (snum in subjs) {
all = getSubjThresholdData('behav',snum)
fit = getSubjFits('behav',snum)
allF = rbind(allF,fit)
allT = rbind(allT,all)
# plots
getSubjThresholdPlot(all,snum,'behav')
}
subjs = c(304)
allT = data.frame()
allF = data.frame()
gs = list()
for (snum in subjs) {
all = getSubjThresholdData('behav',snum)
fit = getSubjFits('behav',snum)
allF = rbind(allF,fit)
allT = rbind(allT,all)
# plots
getSubjThresholdPlot(all,snum,'behav')
}
norms = allF %>%
group_by(task,subj,catch) %>%
filter(catch=='Nocatch') %>%
summarise(normT = mean(T)) %>%
select(-catch)
allF = left_join(allF,norms)
allFn = allF %>%
mutate(T = T / normT)
allF_ = allFn %>%
select(-normT) %>%
group_by(task,catch,subj) %>%
summarise(T=mean(T),beta=mean(beta))
allF_mu = allF_ %>%
group_by(task,catch) %>%
summarise(ciT=sd(T)/sqrt(n())*1.96,T=mean(T),cibeta=sd(beta)/sqrt(n())*1.96,beta=mean(beta))
x = seq(0,6,.01)
weib = data.frame(x=c())
for (i in seq(1,nrow(allF_))) {
t = allF_[i,]$T
b = allF_[i,]$beta
for (xval in x) {
weib = rbind(weib,c(xval,1-(exp(-(xval/t)^b)),allF_[i,]$subj,allF_[i,]$task,allF_[i,]$catch))
}
}
names(weib) = c('x','y','subj','task','catch')
weib = weib %>%
mutate(task=factor(task,levels=c(1,2),labels=c('Coherence','Contrast')),catch=factor(catch,levels=c(1,2,3),labels=c('Control','Task Cued','Task Miscued')))
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/behav')
for (snum in subjs) {
sweib = weib %>%
filter(subj==snum)
fname=sprintf('%s/%s_task_norm.pdf',figFolder,snum)
g = ggplot() +
geom_line(data=sweib,aes(x,y,color=catch),size=1) +
scale_color_brewer(palette='Accent') +
facet_grid(.~task) +
theme_bw() +
ggtitle('Normalized Discrimination Functions') +
xlab('Threshold Normalized to Nocatch Runs (au)') +
ylab('Performance (% Correct)') +
theme(text = element_text(size=20))
ggsave(fname,g)
}
weib2 = data.frame(x=c())
for (i in seq(1,nrow(allF_mu))) {
t = allF_mu[i,]$T
b = allF_mu[i,]$beta
for (xval in x) {
weib2 = rbind(weib2,c(xval,1-(exp(-(xval/t)^b)),allF_mu[i,]$task,allF_mu[i,]$catch))
}
}
names(weib2) = c('x','y','task','catch')
weib2 = weib2 %>%
mutate(task=factor(task,levels=c(1,2),labels=c('Coherence','Contrast')),catch=factor(catch,levels=c(1,2,3),labels=c('Control','Task Cued','Task Miscued')))
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/behav')
fname=sprintf('%s/across_subj.pdf',figFolder)
g = ggplot() +
geom_line(data=weib2,aes(x,y,color=catch),size=3) +
geom_line(data=weib,aes(x,y,color=catch),size=1,alpha=.2) +
scale_color_brewer(palette='Accent') +
facet_grid(.~task) +
theme_bw() +
ggtitle('Discrimination Functions--Parameter Averages Across Subjects (n=4)') +
xlab('Threshold Normalized to Nocatch Runs (au)') +
ylab('Performance (% Correct)') +
theme(text = element_text(size=20))
ggsave(fname,g)
contrasts(allT$catch) = cbind(c(-1,-1,2),c(-1,0,1))
rs = lmer(data=allT,threshold ~ task*catch + (1|subj))
rs2 = lmer(data=allT,threshold~task*catch + (catch|subj))
# rs3 = lmer(data=allT,threshold~task*catch + (task+catch|subj))
# rs4 = lmer(data=allT,threshold~task*catch + (task*catch|subj))
anova(rs,rs2,rs3,rs4)
plot(allEffects(rs2))
contrasts(allT$catch) = cbind(c(-1,-1,2),c(-1,0,1))
rs = lmer(data=allT,threshold ~ task*catch + (1|subj))
rs2 = lmer(data=allT,threshold~task*catch + (catch|subj))
rs3 = lmer(data=allT,threshold~task*catch + (task+catch|subj))
rs4 = lmer(data=allT,threshold~task*catch + (task*catch|subj))
anova(rs,rs2,rs3,rs4)
plot(allEffects(rs2))
all
subjs = c(304)
allT = data.frame()
allF = data.frame()
gs = list()
for (snum in subjs) {
all = getSubjThresholdData('behav',snum)
all = all %>%
filter(threshold>0,threshold<100)
fit = getSubjFits('behav',snum)
allF = rbind(allF,fit)
allT = rbind(allT,all)
# plots
getSubjThresholdPlot(all,snum,'behav')
}
norms = allF %>%
group_by(task,subj,catch) %>%
filter(catch=='Nocatch') %>%
summarise(normT = mean(T)) %>%
select(-catch)
allF = left_join(allF,norms)
allFn = allF %>%
mutate(T = T / normT)
allF_ = allFn %>%
select(-normT) %>%
group_by(task,catch,subj) %>%
summarise(T=mean(T),beta=mean(beta))
allF_mu = allF_ %>%
group_by(task,catch) %>%
summarise(ciT=sd(T)/sqrt(n())*1.96,T=mean(T),cibeta=sd(beta)/sqrt(n())*1.96,beta=mean(beta))
x = seq(0,6,.01)
weib = data.frame(x=c())
for (i in seq(1,nrow(allF_))) {
t = allF_[i,]$T
b = allF_[i,]$beta
for (xval in x) {
weib = rbind(weib,c(xval,1-(exp(-(xval/t)^b)),allF_[i,]$subj,allF_[i,]$task,allF_[i,]$catch))
}
}
names(weib) = c('x','y','subj','task','catch')
weib = weib %>%
mutate(task=factor(task,levels=c(1,2),labels=c('Coherence','Contrast')),catch=factor(catch,levels=c(1,2,3),labels=c('Control','Task Cued','Task Miscued')))
figFolder = paste('/Users/dan/proj/att_awe/analysis/figures/behav')
for (snum in subjs) {
sweib = weib %>%
filter(subj==snum)
fname=sprintf('%s/%s_task_norm.pdf',figFolder,snum)
g = ggplot() +
geom_line(data=sweib,aes(x,y,color=catch),size=1) +
scale_color_brewer(palette='Accent') +
facet_grid(.~task) +
theme_bw() +
ggtitle('Normalized Discrimination Functions') +
xlab('Threshold Normalized to Nocatch Runs (au)') +
ylab('Performance (% Correct)') +
theme(text = element_text(size=20))
ggsave(fname,g)
}
