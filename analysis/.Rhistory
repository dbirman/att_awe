ggplot(aes(taskf,mu,fill=taskf)) +
geom_bar(stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu+sd,ymax=mu+sd)) +
facet_grid(.~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
summarise(mu=mean(RT),sd=sd(RT)) %>%
ggplot() +
geom_bar(aes(taskf,mu,fill=taskf),stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu+sd,ymax=mu+sd)) +
facet_grid(.~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
summarise(mu=mean(RT),sd=sd(RT)) %>%
ggplot() +
geom_bar(aes(taskf,mu,fill=taskf),stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(.~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf) %>%
summary
c
grouped = mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
summarise(mu=mean(RT),sd=sd(RT))
grouped
str(main)
str(mdata)
mdata = mdata %>% mutate(RT = RT*1000)
pdata = pdata %>% mutate(RT = RT*1000)
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
summarise(mu=mean(RT),sd=sd(RT)) %>%
ggplot() +
geom_bar(aes(taskf,mu,fill=taskf),stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(.~dualf) +
theme_bw()
str(mdata)
mdata$RT
str(mdata)
mdata %>%
lm(data=.,RT ~ taskf + dualf + tPos) %>%
summary
mdata %>%
lm(data=.,RT ~ taskf + dualf + tGen) %>%
summary
str(mdata)
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
summarise(mu=mean(RT),sd=sd(RT)) %>%
ggplot() +
geom_bar(aes(dPed,mu,fill=dPed),stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf,dPed) %>%
summarise(mu=mean(RT),sd=sd(RT)) %>%
ggplot() +
geom_bar(aes(dPed,mu,fill=dPed),stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
str(mdata)
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
ggplot() +
geom_bar(aes(dPed,mu,fill=dPed),stat='identity') +
geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
ggplot() +
geom_bar(aes(dPed,mu,fill=dPed),stat='identity') +
#   geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
group_by(taskf,dualf) %>%
ggplot() +
geom_bar(aes(dPed,RT,fill=dPed),stat='identity') +
#   geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
#   group_by(taskf,dualf) %>%
ggplot() +
geom_bar(aes(dPed,RT,fill=dPed),stat='identity') +
#   geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
qplot(mdata$dPed,mdata$RT)
mdata %>%
filter(correct==1) %>%
#   group_by(taskf,dualf) %>%
ggplot() +
geom_point(aes(dPed,RT,fill=dPed)) +
#   geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm")
#   geom_errorbar(aes(taskf,mu,ymin=mu-sd,ymax=mu+sd)) +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
filter(correct==1) %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf) %>%
summary
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
mdata %>%
lm(data=.,RT ~ taskf + dualf + taskf* dPed) %>%
summary
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
str(mdata)
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# First, let's clean this data.frame
main = cleanup(main)
per = cleanup(per)
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
mdata = mdata %>% mutate(RT = RT*1000)
pdata = pdata %>% mutate(RT = RT*1000)
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# First, let's clean this data.frame
main = cleanup(main)
per = cleanup(per)
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
mdata %>%
filter(correct==1) %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
mdata %>%
filter(correct==1) %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
str(mdata)
mdata
str(mdata)
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
str(mdata)
mdata = cleanup(mdata)
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual')))
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
mdata %>%
filter(correct==1) %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
mdata %>%
filter(correct==1) %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
str(mdata)
mdata %>%
filter(correct=='cor') %>%
ggplot(aes(dPed,RT,fill=dPed)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed) %>%
summary
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed + correct) %>%
summary
mdata %>%
ggplot(aes(dPed,RT,fill=correct)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
ggplot(aes(dPed,RT,color=correct)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata
str(mdata)
mdata[1:10]
mdata[1:10,1:10]
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual'))) %>%
mutate(index = 1:length(data))
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
size(mdata)
length(mdata)
height(mdata)
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual'))) %>%
mutate(index = 1:nrow(data))
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
nrow(mdata)
str(mdata)
mdata$index = 1:nrow(mdata)
str(mdata)
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual'))) %>%
mutate(index = 1:nrow(.))
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
mdata %>%
ggplot(aes(dPed,RT,color=correct)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
mdata %>%
lm(data=.,RT ~ taskf + dualf + dPed + correct + index) %>%
summary
str(mdata)
cleanup <- function(data) {
data %>%
filter(!is.nan(response)) %>%
mutate(RT = RT*1000,correct=factor(correct,levels=c(0,1),labels=c("inc","cor"))) %>%
mutate(taskf = factor(task,levels=c(1,2),labels=c('noise','contrast'))) %>%
mutate(dualf = factor(dual,levels=c(0,1),labels=c('single','dual'))) %>%
mutate(index = 1:nrow(.))
}
filesToLoad = 1:52
for (fi in filesToLoad) {
# Dealing with run # fi
main = read.csv(sprintf('../analysis/s300/csv/main%02.f.csv',fi))
per = read.csv(sprintf('../analysis/s300/csv/per%02.f.csv',fi))
run = read.csv(sprintf('../analysis/s300/csv/run%02.f.csv',fi))
# Switch to determine what kind of analysis we do
main = main %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
per = per %>%
mutate(dual=run$dual) %>%
mutate(task=run$blockType)
if (fi==1) {
mdata = main
pdata = per
} else {
mdata = rbind(mdata,main)
pdata = rbind(pdata,per)
}
}
# Do a final cleanup
mdata = cleanup(mdata)
pdata = cleanup(pdata)
str(mdat)
str(mdata)
mdata %>%
ggplot(aes(ped,RT,color=correct)) +
geom_point() +
geom_smooth(method="lm") +
facet_grid(taskf~dualf) +
theme_bw()
